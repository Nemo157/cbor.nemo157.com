!function(e){function t(t){for(var n,r,a=t[0],c=t[1],i=0,l=[];i<a.length;i++)r=a[i],Object.prototype.hasOwnProperty.call(o,r)&&o[r]&&l.push(o[r][0]),o[r]=0;for(n in c)Object.prototype.hasOwnProperty.call(c,n)&&(e[n]=c[n]);for(s&&s(t);l.length;)l.shift()()}var n={},o={0:0};var r={};var a={5:function(){return{"./index_bg.js":{__wbindgen_json_parse:function(e,t){return n[4].exports.a(e,t)}}}}};function c(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,c),o.l=!0,o.exports}c.e=function(e){var t=[],n=o[e];if(0!==n)if(n)t.push(n[2]);else{var i=new Promise((function(t,r){n=o[e]=[t,r]}));t.push(n[2]=i);var l,u=document.createElement("script");u.charset="utf-8",u.timeout=120,c.nc&&u.setAttribute("nonce",c.nc),u.src=function(e){return c.p+""+e+".main.js"}(e);var s=new Error;l=function(t){u.onerror=u.onload=null,clearTimeout(d);var n=o[e];if(0!==n){if(n){var r=t&&("load"===t.type?"missing":t.type),a=t&&t.target&&t.target.src;s.message="Loading chunk "+e+" failed.\n("+r+": "+a+")",s.name="ChunkLoadError",s.type=r,s.request=a,n[1](s)}o[e]=void 0}};var d=setTimeout((function(){l({type:"timeout",target:u})}),12e4);u.onerror=u.onload=l,document.head.appendChild(u)}return({1:[5]}[e]||[]).forEach((function(e){var n=r[e];if(n)t.push(n);else{var o,i=a[e](),l=fetch(c.p+""+{5:"d94cfd02c2b98d4df2bd"}[e]+".module.wasm");if(i instanceof Promise&&"function"==typeof WebAssembly.compileStreaming)o=Promise.all([WebAssembly.compileStreaming(l),i]).then((function(e){return WebAssembly.instantiate(e[0],e[1])}));else if("function"==typeof WebAssembly.instantiateStreaming)o=WebAssembly.instantiateStreaming(l,i);else{o=l.then((function(e){return e.arrayBuffer()})).then((function(e){return WebAssembly.instantiate(e,i)}))}t.push(r[e]=o.then((function(t){return c.w[e]=(t.instance||t).exports})))}})),Promise.all(t)},c.m=e,c.c=n,c.d=function(e,t,n){c.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},c.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},c.t=function(e,t){if(1&t&&(e=c(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(c.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var o in e)c.d(n,o,function(t){return e[t]}.bind(null,o));return n},c.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return c.d(t,"a",t),t},c.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},c.p="",c.oe=function(e){throw console.error(e),e},c.w={};var i=window.webpackJsonp=window.webpackJsonp||[],l=i.push.bind(i);i.push=t,i=i.slice();for(var u=0;u<i.length;u++)t(i[u]);var s=l;c(c.s=1)}([function(e,t,n){"use strict";var o=n(2),r={"text/plain":"Text","text/html":"Url",default:"Text"};e.exports=function(e,t){var n,a,c,i,l,u,s=!1;t||(t={}),n=t.debug||!1;try{if(c=o(),i=document.createRange(),l=document.getSelection(),(u=document.createElement("span")).textContent=e,u.style.all="unset",u.style.position="fixed",u.style.top=0,u.style.clip="rect(0, 0, 0, 0)",u.style.whiteSpace="pre",u.style.webkitUserSelect="text",u.style.MozUserSelect="text",u.style.msUserSelect="text",u.style.userSelect="text",u.addEventListener("copy",(function(o){if(o.stopPropagation(),t.format)if(o.preventDefault(),void 0===o.clipboardData){n&&console.warn("unable to use e.clipboardData"),n&&console.warn("trying IE specific stuff"),window.clipboardData.clearData();var a=r[t.format]||r.default;window.clipboardData.setData(a,e)}else o.clipboardData.clearData(),o.clipboardData.setData(t.format,e);t.onCopy&&(o.preventDefault(),t.onCopy(o.clipboardData))})),document.body.appendChild(u),i.selectNodeContents(u),l.addRange(i),!document.execCommand("copy"))throw new Error("copy command was unsuccessful");s=!0}catch(o){n&&console.error("unable to copy using execCommand: ",o),n&&console.warn("trying IE specific stuff");try{window.clipboardData.setData(t.format||"text",e),t.onCopy&&t.onCopy(window.clipboardData),s=!0}catch(o){n&&console.error("unable to copy using clipboardData: ",o),n&&console.error("falling back to prompt"),a=function(e){var t=(/mac os x/i.test(navigator.userAgent)?"âŒ˜":"Ctrl")+"+C";return e.replace(/#{\s*key\s*}/g,t)}("message"in t?t.message:"Copy to clipboard: #{key}, Enter"),window.prompt(a,e)}}finally{l&&("function"==typeof l.removeRange?l.removeRange(i):l.removeAllRanges()),u&&document.body.removeChild(u),c()}return s}},function(e,t,n){"use strict";n.r(t);var o=n(0),r=n.n(o);const a=n.e(1).then(n.bind(null,3)),c=document.getElementById("input"),i=document.getElementById("submit"),l=document.getElementById("hex"),u=document.getElementById("diag"),s=document.getElementById("save"),d=document.getElementById("saved"),p=document.getElementById("copy-button"),m=document.getElementById("copied");function f(e,t){try{window.localStorage.setItem(e,JSON.stringify(t))}catch(e){}}function y(e){try{return JSON.parse(window.localStorage.getItem(e))}catch(e){}}try{const e=window.localStorage.getItem("dark");e&&(f("theme",JSON.parse(e)?"dark":"light"),window.localStorage.removeItem("dark"))}catch(e){}const g=y("theme")||"auto";document.querySelector(`input[name="theme"][value="${g}"]`).checked=!0,document.body.dataset.theme=g;for(const e of document.querySelectorAll('input[name="theme"]'))e.addEventListener("click",()=>{f("theme",e.value),document.body.dataset.theme=e.value});a.then(e=>{function t(t,n){let o;switch(t){case"auto":o=e.parse_auto(n);break;case"hex":o=e.parse_hex(n);break;case"diag":o=e.parse_diag(n)}if(o.Err)throw o.Err;l.textContent=o.Ok[0],u.textContent=o.Ok[1]}const n=()=>{const e=document.querySelector('input[name="type"]:checked').value;f("type",e),f("value",c.value);try{t(e,c.value)}catch(e){l.textContent=e,u.textContent=""}};i.addEventListener("click",n),s.addEventListener("click",()=>{const e=document.querySelector('input[name="type"]:checked').value;let t=new URL(document.location.toString());t.searchParams.set("type",e),t.searchParams.set("value",c.value),d.href=t.toString(),d.text="Permalink to the playground",p.style.display="inline-block"});let o=setTimeout(()=>{},0);p.addEventListener("click",()=>{r()(d.href,{format:"text/plain"})&&(m.style.display="inline-block",m.style.transition="opacity 0.1s",m.style.opacity="1",clearTimeout(o),o=setTimeout(()=>{m.style.transition="opacity 5s",m.style.opacity="0",o=setTimeout(()=>{m.style.display="none"},5e3)},100))}),c.addEventListener("keydown",e=>{13==e.keyCode&&(e.metaKey||e.ctrlKey)&&n()}),c.addEventListener("keyup",()=>{(()=>{const e=document.querySelector('input[name="type"]:checked').value;try{t(e,c.value),f("type",e),f("value",c.value)}catch(e){console.debug("Failure while trying: "+e)}})()});let a=new URL(document.location.toString()),g=a.searchParams.get("type"),h=a.searchParams.get("value");g&&h||(g=y("type"),h=y("value")),h||(g="hex",h="bf6346756ef563416d7421ff"),g&&h&&(document.querySelector(`input[name="type"][value="${g}"]`).checked=!0,c.value=h,t(g,h))},e=>l.textContent=e)},function(e,t){e.exports=function(){var e=document.getSelection();if(!e.rangeCount)return function(){};for(var t=document.activeElement,n=[],o=0;o<e.rangeCount;o++)n.push(e.getRangeAt(o));switch(t.tagName.toUpperCase()){case"INPUT":case"TEXTAREA":t.blur();break;default:t=null}return e.removeAllRanges(),function(){"Caret"===e.type&&e.removeAllRanges(),e.rangeCount||n.forEach((function(t){e.addRange(t)})),t&&t.focus()}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,